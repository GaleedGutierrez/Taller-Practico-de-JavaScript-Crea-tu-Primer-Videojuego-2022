{
	"env": {
		"browser": true,
		"es2021": true,
		"node": true
	},
	"extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
	"overrides": [],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest",
		"sourceType": "module"
	},
	"plugins": ["@typescript-eslint"],
	"root": true,
	"rules": {
		"semi": ["error", "always"],
		"space-before-function-paren": ["error", "always"],
		"quotes": [
			"error",
			"single",
			{
				"allowTemplateLiterals": true
			}
		],
		"indent": ["error", "tab", { "SwitchCase": 1 }],
		"space-infix-ops": [
			"error",
			{
				"int32Hint": false
			}
		],
		"comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"key-spacing": [
			"error",
			{
				"multiLine": {
					"beforeColon": true,
					"afterColon": true
				},
				"singleLine": {
					"beforeColon": false,
					"afterColon": true
				},
				"align": {
					"beforeColon": true,
					"afterColon": true,
					"on": "colon"
				}
			}
		],
		"no-multi-spaces": [
			"error",
			{
				"ignoreEOLComments": false
			}
		],
		"padding-line-between-statements": [
			"error",
			{ "blankLine": "always", "prev": "*", "next": "return" },
			{ "blankLine": "always", "prev": "*", "next": "block-like" },
			{ "blankLine": "always", "prev": ["case", "default"], "next": "*" },
			{ "blankLine": "always", "prev": "directive", "next": "*" },
			{ "blankLine": "any", "prev": "directive", "next": "directive" },
			{
				"blankLine": "always",
				"prev": ["const", "let", "var"],
				"next": "*"
			},
			{
				"blankLine": "any",
				"prev": ["const", "let", "var"],
				"next": ["const", "let", "var"]
			},
			// { "blankLine": "always", "prev": ["const", "let", "var"], "next": "block-like"},
			// { "blankLine": "any",    "prev": ["const", "let", "var"], "next": "expression"},
			// { "blankLine": "always", "prev": "block-like", "next": ["const", "let", "var"]},
			// { "blankLine": "always", "prev": "block-like", "next": "block-like"},
			{ "blankLine": "always", "prev": "block-like", "next": "*" },
			{ "blankLine": "always", "prev": "expression", "next": "*" }, // veremos
			{ "blankLine": "always", "prev": "*", "next": "expression" }, // veremos
			{ "blankLine": "any", "prev": "expression", "next": "expression" }, // veremos
			{ "blankLine": "always", "prev": "import", "next": "*" },
			{ "blankLine": "any", "prev": "import", "next": "import" },
			{ "blankLine": "always", "prev": "export", "next": "*" }
			// { "blankLine": "any", "prev": "export", "next": "export" }
		],
		"arrow-spacing": ["error", { "before": true, "after": true }],
		"lines-between-class-members": ["error", "always"],
		"object-curly-spacing": ["error", "always"],
		"computed-property-spacing": [
			"error",
			"never",
			{ "enforceForClassMembers": true }
		],
		"array-bracket-spacing": [
			"error",
			"always",
			{
				"singleValue": false
			}
		],
		"keyword-spacing": ["error", { "before": true }],
		"space-before-blocks": "error",
		"multiline-ternary": ["error", "always"],
		"no-unneeded-ternary": "error",
		"new-cap": "error",
		"no-lone-blocks": "error",
		"camelcase": "error",
		"space-in-parens": ["error", "never"],
		"func-call-spacing": ["error", "never"],
		"quote-props": ["error", "consistent-as-needed"],
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/no-non-null-assertion": "warn",
		"@typescript-eslint/indent": ["error", "tab", { "SwitchCase": 1 }],
		"@typescript-eslint/consistent-type-definitions": "warn"
	}
}
